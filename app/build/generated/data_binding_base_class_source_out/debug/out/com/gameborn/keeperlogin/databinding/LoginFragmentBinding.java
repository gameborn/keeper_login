// Generated by view binder compiler. Do not edit!
package com.gameborn.keeperlogin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.gameborn.keeperlogin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView createAccountLink;

  @NonNull
  public final Button enterpriseLoginButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView loginErrorHintText;

  @NonNull
  public final TextView needHelpLink;

  @NonNull
  public final TextView passwordErrorHintText;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText userLoginText;

  @NonNull
  public final EditText userPasswordText;

  private LoginFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView createAccountLink, @NonNull Button enterpriseLoginButton,
      @NonNull ImageView imageView, @NonNull LinearLayout linearLayout, @NonNull Button loginButton,
      @NonNull TextView loginErrorHintText, @NonNull TextView needHelpLink,
      @NonNull TextView passwordErrorHintText, @NonNull TextView textView,
      @NonNull EditText userLoginText, @NonNull EditText userPasswordText) {
    this.rootView = rootView;
    this.createAccountLink = createAccountLink;
    this.enterpriseLoginButton = enterpriseLoginButton;
    this.imageView = imageView;
    this.linearLayout = linearLayout;
    this.loginButton = loginButton;
    this.loginErrorHintText = loginErrorHintText;
    this.needHelpLink = needHelpLink;
    this.passwordErrorHintText = passwordErrorHintText;
    this.textView = textView;
    this.userLoginText = userLoginText;
    this.userPasswordText = userPasswordText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createAccountLink;
      TextView createAccountLink = rootView.findViewById(id);
      if (createAccountLink == null) {
        break missingId;
      }

      id = R.id.enterpriseLoginButton;
      Button enterpriseLoginButton = rootView.findViewById(id);
      if (enterpriseLoginButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.loginErrorHintText;
      TextView loginErrorHintText = rootView.findViewById(id);
      if (loginErrorHintText == null) {
        break missingId;
      }

      id = R.id.needHelpLink;
      TextView needHelpLink = rootView.findViewById(id);
      if (needHelpLink == null) {
        break missingId;
      }

      id = R.id.passwordErrorHintText;
      TextView passwordErrorHintText = rootView.findViewById(id);
      if (passwordErrorHintText == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.userLoginText;
      EditText userLoginText = rootView.findViewById(id);
      if (userLoginText == null) {
        break missingId;
      }

      id = R.id.userPasswordText;
      EditText userPasswordText = rootView.findViewById(id);
      if (userPasswordText == null) {
        break missingId;
      }

      return new LoginFragmentBinding((ConstraintLayout) rootView, createAccountLink,
          enterpriseLoginButton, imageView, linearLayout, loginButton, loginErrorHintText,
          needHelpLink, passwordErrorHintText, textView, userLoginText, userPasswordText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
